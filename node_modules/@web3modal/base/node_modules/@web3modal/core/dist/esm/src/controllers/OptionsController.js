import { subscribeKey as subKey } from 'valtio/vanilla/utils';
import { proxy } from 'valtio/vanilla';
import { ApiController } from './ApiController.js';
import { ConstantsUtil } from '../utils/ConstantsUtil.js';
// -- State --------------------------------------------- //
const state = proxy({
    projectId: '',
    sdkType: 'w3m',
    sdkVersion: 'html-wagmi-undefined',
    enableAnalytics: ConstantsUtil.DEFAULT_FEATURES.analytics,
    enableOnramp: ConstantsUtil.DEFAULT_FEATURES.onramp,
    enableSwaps: ConstantsUtil.DEFAULT_FEATURES.swaps,
    allWallets: ConstantsUtil.DEFAULT_FEATURES.allWallets,
    disableAppend: ConstantsUtil.DEFAULT_FEATURES.disableAppend,
    enableEIP6963: ConstantsUtil.DEFAULT_FEATURES.enableEIP6963
});
// -- Controller ---------------------------------------- //
export const OptionsController = {
    state,
    subscribeKey(key, callback) {
        return subKey(state, key, callback);
    },
    setOptions(options) {
        Object.assign(state, options);
    },
    setProjectId(projectId) {
        state.projectId = projectId;
    },
    setAllWallets(allWallets = ConstantsUtil.DEFAULT_FEATURES.allWallets) {
        state.allWallets = allWallets;
    },
    setIncludeWalletIds(includeWalletIds) {
        state.includeWalletIds = includeWalletIds;
    },
    setExcludeWalletIds(excludeWalletIds) {
        state.excludeWalletIds = excludeWalletIds;
        if (excludeWalletIds) {
            ApiController.searchWalletByIds({ ids: excludeWalletIds });
        }
    },
    setFeaturedWalletIds(featuredWalletIds) {
        state.featuredWalletIds = featuredWalletIds;
    },
    setTokens(tokens) {
        state.tokens = tokens;
    },
    setTermsConditionsUrl(termsConditionsUrl) {
        state.termsConditionsUrl = termsConditionsUrl;
    },
    setPrivacyPolicyUrl(privacyPolicyUrl) {
        state.privacyPolicyUrl = privacyPolicyUrl;
    },
    setCustomWallets(customWallets) {
        state.customWallets = customWallets;
    },
    setIsSiweEnabled(isSiweEnabled) {
        state.isSiweEnabled = isSiweEnabled;
    },
    setIsUniversalProvider(isUniversalProvider) {
        state.isUniversalProvider = isUniversalProvider;
    },
    setEnableAnalytics(enableAnalytics = ConstantsUtil.DEFAULT_FEATURES
        .analytics) {
        state.enableAnalytics = enableAnalytics;
    },
    setSdkVersion(sdkVersion) {
        state.sdkVersion = sdkVersion;
    },
    setMetadata(metadata) {
        state.metadata = metadata;
    },
    setOnrampEnabled(enableOnramp = ConstantsUtil.DEFAULT_FEATURES.onramp) {
        state.enableOnramp = enableOnramp;
    },
    setDisableAppend(disableAppend = ConstantsUtil.DEFAULT_FEATURES
        .disableAppend) {
        state.disableAppend = disableAppend;
    },
    setEIP6963Enabled(enableEIP6963 = ConstantsUtil.DEFAULT_FEATURES
        .enableEIP6963) {
        state.enableEIP6963 = enableEIP6963;
    },
    setHasMultipleAddresses(hasMultipleAddresses) {
        state.hasMultipleAddresses = hasMultipleAddresses;
    },
    setEnableSwaps(enableSwaps = ConstantsUtil.DEFAULT_FEATURES.swaps) {
        state.enableSwaps = enableSwaps;
    }
};
//# sourceMappingURL=OptionsController.js.map